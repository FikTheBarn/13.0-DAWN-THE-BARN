{{ 'component-image-with-text.css' | asset_url | stylesheet_tag }}
{{ 'video-section.css' | asset_url | stylesheet_tag }}
{{ 'component-deferred-media.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

{%- liquid
  assign fetch_priority = 'auto'
  if section.index == 1
    assign fetch_priority = 'high'
  endif
  if section.settings.color_scheme == section.settings.section_color_scheme and section.settings.content_layout == 'no-overlap'
    assign remove_color_classes = true
  endif
-%}

{%- liquid
  assign video_id = section.settings.video.id | default: section.settings.video_url.id
  assign video_alt = section.settings.video.alt | default: section.settings.description
  assign alt = 'sections.video.load_video' | t: description: video_alt | escape
  assign poster = section.settings.video.preview_image | default: section.settings.cover_image

  if section.settings.video != null
    assign ratio_diff = section.settings.video.aspect_ratio | minus: poster.aspect_ratio | abs
    if ratio_diff < 0.01 and ratio_diff > 0
      assign fix_ratio = true
    endif
  endif
-%}

<div class="section-{{ section.id }}-padding gradient color-{{ section.settings.section_color_scheme }}">
  <div class="page-width">
    <div class="image-with-text image-with-text--{{ section.settings.content_layout }} isolate{% if settings.text_boxes_border_thickness > 0 and settings.text_boxes_border_opacity > 0 and settings.media_border_thickness > 0 and settings.media_border_opacity > 0 %} collapse-borders{% endif %}{% unless section.settings.color_scheme == section.settings.section_color_scheme and settings.media_border_thickness > 0 and settings.text_boxes_shadow_opacity == 0 and settings.text_boxes_border_thickness == 0 or settings.text_boxes_border_opacity == 0 %} collapse-corners{% endunless %}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}">
      <div class="image-with-text__grid grid grid--gapless grid--1-col grid--{% if section.settings.desktop_image_width == 'medium' %}2-col-tablet{% else %}3-col-tablet{% endif %}{% if section.settings.layout == 'text_first' %} image-with-text__grid--reverse{% endif %}">
        <div class="image-with-text__media-item image-with-text__media-item--{{ section.settings.desktop_image_width }} image-with-text__media-item--{{ section.settings.desktop_content_position }} grid__item">
          <div
            class="image-with-text__media image-with-text__video image-with-text__media--{{ section.settings.height }} {% if section.settings.image != blank %} global-media-settings {% endif %}{% unless remove_color_classes %} gradient color-{{ section.settings.color_scheme }}{% else %} background-transparent{% endunless %}{% if section.settings.image != blank %} media{% elsif section.settings.video_url == "" %} image-with-text__media--placeholder placeholder{% endif %}{% if section.settings.image_behavior != 'none' %} animate--{{ section.settings.image_behavior }}{% endif %}"
            {% if section.settings.height == 'adapt' and section.settings.image != blank %}
              style="padding-bottom: {{ 1 | divided_by: section.settings.image.aspect_ratio | times: 100 }}%;"
            {% endif %}
          >
            {%- if section.settings.image != blank -%}
              {%- if section.settings.image_behavior == 'ambient' or section.settings.image_behavior == 'zoom-in' -%}
                {%- assign widths = '198, 432, 642, 900, 1284, 1800' -%}
                {%- capture sizes -%}
              (min-width: {{ settings.page_width }}px) {{ settings.page_width | minus: 100 | divided_by: 1.6667 }}px,
              (min-width: 750px) calc((100vw - 130px) / 1.667), calc((100vw - 50px) / 1.667)
            {%- endcapture -%}
              {%- else -%}
                {%- assign widths = '165, 360, 535, 750, 1070, 1500' -%}
                {%- capture sizes -%}
              (min-width: {{ settings.page_width }}px) {{ settings.page_width | minus: 100 | divided_by: 2 }}px,
              (min-width: 750px) calc((100vw - 130px) / 2), calc((100vw - 50px) / 2)
            {%- endcapture -%}
              {%- endif -%}
              {{
                section.settings.image
                | image_url: width: 1500
                | image_tag: sizes: sizes, widths: widths, fetchpriority: fetch_priority
              }}
            {%- elsif section.settings.video_url -%}
              <deferred-media
                class="video-section__media deferred-media gradient global-media-settings{% if section.settings.full_width %} global-media-settings--full-width{% endif %}{% if fix_ratio %} media-fit-cover{% endif %}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
                data-media-id="{{ video_id }}"
                {% if poster != null %}
                  style="--ratio-percent: {{ 1 | divided_by: poster.aspect_ratio | times: 100 }}%;"
                {% endif %}
              >
                <button
                  id="Deferred-Poster-Modal-{{ video_id }}"
                  class="video-section__poster media deferred-media__poster media--landscape"
                  type="button"
                  aria-label="{{ alt }}"
                  onclick="loadVideo('{{ video_id }}', '{{ section.settings.video_url.type }}', '{{ section.settings.video_url }}')"
                >
                  {%- if poster != null -%}
                    {{
                      poster
                      | image_url: width: 3840
                      | image_tag: sizes: sizes, widths: '375, 750, 1100, 1500, 1780, 2000, 3000, 3840', alt: alt
                    }}
                  {%- else -%}
                    {{ 'hero-apparel-3' | placeholder_svg_tag: 'placeholder-svg placeholder' }}
                  {%- endif -%}
                  <span class="deferred-media__poster-button motion-reduce">
                    {%- render 'icon-play' -%}
                  </span>
                </button>
                <template>
                  {%- if section.settings.video == null and section.settings.video_url != null -%}
                    {%- liquid
                      assign loop = ''
                      if section.settings.enable_video_looping
                        assign loop = '&loop=1&playlist=' | append: video_id
                      endif
                    -%}
                    {%- if section.settings.video_url.type == 'youtube' -%}
                      <iframe
                        src="https://www.youtube.com/embed/{{ video_id }}?enablejsapi=1&autoplay=1{{ loop }}"
                        class="js-youtube"
                        allow="autoplay; encrypted-media"
                        allowfullscreen
                        title="{{ section.settings.description | escape }}"
                      ></iframe>
                    {%- else -%}
                      <iframe
                        src="https://player.vimeo.com/video/{{ video_id }}?autoplay=1{{ loop }}"
                        class="js-vimeo"
                        allow="autoplay; encrypted-media"
                        allowfullscreen
                        title="{{ section.settings.description | escape }}"
                      ></iframe>
                    {%- endif -%}
                  {%- else -%}
                    {{
                      section.settings.video
                      | video_tag:
                        image_size: '1100x',
                        autoplay: true,
                        loop: section.settings.enable_video_looping,
                        controls: true,
                        muted: false
                    }}
                  {%- endif -%}
                </template>
              </deferred-media>
            {%- else -%}
              {{ 'detailed-apparel-1' | placeholder_svg_tag: 'placeholder-svg' }}
            {%- endif -%}
          </div>
        </div>
        <div class="image-with-text__text-item grid__item">
          <div
            id="ImageWithText--{{ section.id }}"
            class="image-with-text__content image-with-text__content--{{ section.settings.desktop_content_position }} image-with-text__content--desktop-{{ section.settings.desktop_content_alignment }} image-with-text__content--mobile-{{ section.settings.mobile_content_alignment }} image-with-text__content--{{ section.settings.height }} content-container{% unless remove_color_classes %} gradient color-{{ section.settings.color_scheme }}{% else %} background-transparent{% endunless %}"
          >
            {%- for block in section.blocks -%}
              {% case block.type %}
                {%- when 'heading' -%}
                  <h2
                    class="image-with-text__heading inline-richtext {{ block.settings.heading_size }}"
                    {{ block.shopify_attributes }}
                  >
                    {{ block.settings.heading }}
                  </h2>
                {%- when 'caption' -%}
                  <p
                    class="image-with-text__text image-with-text__text--caption {{ block.settings.text_style }} {{ block.settings.text_style }}--{{ block.settings.text_size }} {{ block.settings.text_style }}"
                    {{ block.shopify_attributes }}
                  >
                    {{ block.settings.caption | escape }}
                  </p>
                {%- when 'text' -%}
                  <div class="image-with-text__text rte {{ block.settings.text_style }}" {{ block.shopify_attributes }}>
                    {{ block.settings.text }}
                  </div>
                {%- when 'button' -%}
                  {%- if block.settings.button_label != blank -%}
                    <a
                      {% if block.settings.button_link == blank %}
                        role="link"
                        aria-disabled="true"
                      {% else %}
                        href="{{ block.settings.button_link }}"
                      {% endif %}
                      class="button{% if block.settings.button_style_secondary %} button--secondary{% else %} button--primary{% endif %}"
                      {{ block.shopify_attributes }}
                    >
                      {{ block.settings.button_label }}
                    </a>
                  {%- endif -%}
              {% endcase %}
            {%- endfor -%}
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
function loadVideo(videoId, videoType, videoUrl) {
  const mediaId = `#Deferred-Poster-Modal-${videoId}`;
  const button = document.querySelector(mediaId);
  const deferredMedia = button.closest('deferred-media');

  if (videoType === 'youtube') {
    deferredMedia.innerHTML = `
      <iframe
        src="https://www.youtube.com/embed/${videoId}?enablejsapi=1&autoplay=1"
        class="js-youtube"
        allow="autoplay; encrypted-media"
        allowfullscreen
        title="Video"
      ></iframe>
    `;
  } else if (videoType === 'vimeo') {
    deferredMedia.innerHTML = `
      <iframe
        src="https://player.vimeo.com/video/${videoId}?autoplay=1"
        class="js-vimeo"
        allow="autoplay; encrypted-media"
        allowfullscreen
        title="Video"
      ></iframe>
    `;
  }
}
</script>

{% schema %}
{
  "name": "t:sections.image-with-text.name",
  "class": "section",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "image_picker",
      "id": "image",
      "label": "t:sections.image-with-text.settings.image.label"
    },
    {
      "type": "url",
      "id": "video_url",
      "label": "Video Url"
    },
    {
      "type": "url",
      "id": "video_image_url",
      "label": "Video Image Url"
    },
    {
      "type": "select",
      "id": "height",
      "options": [
        {
          "value": "adapt",
          "label": "t:sections.image-with-text.settings.height.options__1.label"
        },
        {
          "value": "small",
          "label": "t:sections.image-with-text.settings.height.options__2.label"
        },
        {
          "value": "medium",
          "label": "t:sections.image-with-text.settings.height.options__3.label"
        },
        {
          "value": "large",
          "label": "t:sections.image-with-text.settings.height.options__4.label"
        }
      ],
      "default": "adapt",
      "label": "t:sections.image-with-text.settings.height.label"
    },
    {
      "type": "select",
      "id": "desktop_image_width",
      "options": [
        {
          "value": "small",
          "label": "t:sections.image-with-text.settings.desktop_image_width.options__1.label"
        },
        {
          "value": "medium",
          "label": "t:sections.image-with-text.settings.desktop_image_width.options__2.label"
        },
        {
          "value": "large",
          "label": "t:sections.image-with-text.settings.desktop_image_width.options__3.label"
        }
      ],
      "default": "medium",
      "label": "t:sections.image-with-text.settings.desktop_image_width.label",
      "info": "t:sections.image-with-text.settings.desktop_image_width.info"
    },
    {
      "type": "select",
      "id": "layout",
      "options": [
        {
          "value": "image_first",
          "label": "t:sections.image-with-text.settings.layout.options__1.label"
        },
        {
          "value": "text_first",
          "label": "t:sections.image-with-text.settings.layout.options__2.label"
        }
      ],
      "default": "image_first",
      "label": "t:sections.image-with-text.settings.layout.label",
      "info": "t:sections.image-with-text.settings.layout.info"
    },
    {
      "type": "select",
      "id": "desktop_content_position",
      "options": [
        {
          "value": "top",
          "label": "t:sections.image-with-text.settings.desktop_content_position.options__1.label"
        },
        {
          "value": "middle",
          "label": "t:sections.image-with-text.settings.desktop_content_position.options__2.label"
        },
        {
          "value": "bottom",
          "label": "t:sections.image-with-text.settings.desktop_content_position.options__3.label"
        }
      ],
      "default": "top",
      "label": "t:sections.image-with-text.settings.desktop_content_position.label",
      "info": "t:sections.image-with-text.settings.desktop_content_position.info"
    },
    {
      "type": "select",
      "id": "desktop_content_alignment",
      "options": [
        {
          "value": "left",
          "label": "t:sections.image-with-text.settings.desktop_content_alignment.options__1.label"
        },
        {
          "value": "center",
          "label": "t:sections.image-with-text.settings.desktop_content_alignment.options__2.label"
        },
        {
          "value": "right",
          "label": "t:sections.image-with-text.settings.desktop_content_alignment.options__3.label"
        }
      ],
      "default": "left",
      "label": "t:sections.image-with-text.settings.desktop_content_alignment.label",
      "info": "t:sections.image-with-text.settings.desktop_content_alignment.info"
    },
    {
      "type": "select",
      "id": "mobile_content_alignment",
      "options": [
        {
          "value": "left",
          "label": "t:sections.image-with-text.settings.mobile_content_alignment.options__1.label"
        },
        {
          "value": "center",
          "label": "t:sections.image-with-text.settings.mobile_content_alignment.options__2.label"
        },
        {
          "value": "right",
          "label": "t:sections.image-with-text.settings.mobile_content_alignment.options__3.label"
        }
      ],
      "default": "center",
      "label": "t:sections.image-with-text.settings.mobile_content_alignment.label",
      "info": "t:sections.image-with-text.settings.mobile_content_alignment.info"
    },
    {
      "type": "select",
      "id": "color_scheme",
      "options": [
        {
          "value": "light",
          "label": "t:sections.image-with-text.settings.color_scheme.options__1.label"
        },
        {
          "value": "dark",
          "label": "t:sections.image-with-text.settings.color_scheme.options__2.label"
        }
      ],
      "default": "light",
      "label": "t:sections.image-with-text.settings.color_scheme.label",
      "info": "t:sections.image-with-text.settings.color_scheme.info"
    },
    {
      "type": "checkbox",
      "id": "animations_reveal_on_scroll",
      "label": "t:sections.image-with-text.settings.animations_reveal_on_scroll.label",
      "default": false
    }
  ],
  "blocks": [
    {
      "type": "image",
      "name": "Image",
      "settings": [
        {
          "id": "image",
          "type": "image_picker",
          "label": "t:sections.image-with-text.blocks.image.settings.image.label"
        },
        {
          "id": "heading",
          "type": "text",
          "label": "t:sections.image-with-text.blocks.image.settings.heading.label"
        },
        {
          "id": "caption",
          "type": "text",
          "label": "t:sections.image-with-text.blocks.image.settings.caption.label"
        },
        {
          "id": "text",
          "type": "richtext",
          "label": "t:sections.image-with-text.blocks.image.settings.text.label"
        },
        {
          "id": "button_label",
          "type": "text",
          "label": "t:sections.image-with-text.blocks.image.settings.button_label.label"
        },
        {
          "id": "button_link",
          "type": "url",
          "label": "t:sections.image-with-text.blocks.image.settings.button_link.label"
        },
        {
          "id": "button_style_secondary",
          "type": "checkbox",
          "label": "t:sections.image-with-text.blocks.image.settings.button_style_secondary.label",
          "default": false
        }
      ]
    }
  ],
  "presets": [
    {
      "category": "Image with text",
      "name": "Image left, text right",
      "settings": {
        "layout": "image_first"
      }
    },
    {
      "category": "Image with text",
      "name": "Text left, image right",
      "settings": {
        "layout": "text_first"
      }
    }
  ]
}
{% endschema %}
